$date
	Sun Oct  5 07:22:03 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ripplecarryadder_4bit_tb $end
$var wire 4 ! Sum [3:0] $end
$var wire 1 " Cout $end
$var reg 1 # Cin $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$scope module uut $end
$var wire 1 # Cin $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 3 ( w [2:0] $end
$var wire 4 ) Sum [3:0] $end
$var wire 1 " Cout $end
$scope module a1 $end
$var wire 1 * A $end
$var wire 1 + B $end
$var wire 1 # Cin $end
$var wire 1 , Cout $end
$var wire 1 - Sum $end
$upscope $end
$scope module a2 $end
$var wire 1 . A $end
$var wire 1 / B $end
$var wire 1 0 Cin $end
$var wire 1 1 Cout $end
$var wire 1 2 Sum $end
$upscope $end
$scope module a3 $end
$var wire 1 3 A $end
$var wire 1 4 B $end
$var wire 1 5 Cin $end
$var wire 1 6 Cout $end
$var wire 1 7 Sum $end
$upscope $end
$scope module a4 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 : Cin $end
$var wire 1 " Cout $end
$var wire 1 ; Sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
0#
0"
b0 !
$end
#10
b10 !
b10 )
12
10
b1 (
1,
1+
1*
b1 %
b1 '
b1 $
b1 &
#20
1;
1:
16
15
07
b111 (
11
b1000 !
b1000 )
02
14
1.
b101 %
b101 '
b11 $
b11 &
#30
0;
0:
06
17
05
b1 (
01
12
b111 !
b111 )
1-
04
0.
13
1#
b1 %
b1 '
b101 $
b101 &
#40
1"
1:
b101 (
16
07
b11 !
b11 )
0;
14
18
b101 %
b101 '
b1101 $
b1101 &
#50
17
15
b111 (
11
02
0"
1;
b1100 !
b1100 )
0-
1/
08
0#
b111 %
b111 '
b101 $
b101 &
#60
